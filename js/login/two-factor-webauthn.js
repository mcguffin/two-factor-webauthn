!function(){var n={};(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;n={login:function(n,e){n.action;var t,o,a,i,r=n.payload;n._wpnonce,t=r,o=function(n,t){e({success:n,result:t})},a=JSON.parse(t),i=a.challenge,a.challenge=new Uint8Array(a.challenge),a.allowCredentials.forEach(function(n,e){a.allowCredentials[e].id=new Uint8Array(n.id)}),navigator.credentials.get({publicKey:a}).then(function(n){var e=[];new Uint8Array(n.rawId).forEach(function(n){e.push(n)});var t=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(n.response.clientDataJSON))),a=[];new Uint8Array(n.response.clientDataJSON).forEach(function(n){a.push(n)});var r=[];new Uint8Array(n.response.authenticatorData).forEach(function(n){r.push(n)});var l=[];new Uint8Array(n.response.signature).forEach(function(n){l.push(n)});var u={type:n.type,originalChallenge:i,rawId:e,response:{authenticatorData:r,clientData:t,clientDataJSONarray:a,signature:l}};o(!0,JSON.stringify(u))}).catch(function(n){"name"in n&&("AbortError"==n.name||"NS_ERROR_ABORT"==n.name||"NotAllowedError"==n.name)?o(!1,"abort"):o(!1,n.toString())})}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{}),function(e){"use strict";var t,o=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};window.webauthnL10n||window.console.error("u2fL10n is not defined"),setTimeout(function(){(0,n.login)(window.webauthnL10n,function(n){n.success?((0,o.default)("#webauthn_response").val(n.result),(0,o.default)("#loginform").submit()):window.console.error("Authentication Failed",n.result)})},1e3)}.call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,