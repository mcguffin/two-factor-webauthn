!function(){var e={};(function(n){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==n?n.jQuery:null)&&t.__esModule?t:{default:t};e={register:function(e,n){var t=e.action,r=e.payload,o=e._wpnonce;!function(e,n){(e=JSON.parse(e)).publicKey.attestation=void 0,e.publicKey.challenge=new Uint8Array(e.publicKey.challenge),e.publicKey.user.id=new Uint8Array(e.publicKey.user.id),navigator.credentials.create({publicKey:e.publicKey}).then(function(t){var a=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(t.response.clientDataJSON)));if(e.b64challenge!=a.challenge&&n(!1,"key returned something unexpected (1)"),"https://"+e.publicKey.rp.name!=a.origin)return n(!1,"key returned something unexpected (2)");if(!("type"in a))return n(!1,"key returned something unexpected (3)");if("webauthn.create"!=a.type)return n(!1,"key returned something unexpected (4)");var r=[];new Uint8Array(t.response.attestationObject).forEach(function(e){r.push(e)});var o=[];new Uint8Array(t.rawId).forEach(function(e){o.push(e)});var i={rawId:o,id:t.id,type:t.type,response:{attestationObject:r,clientDataJSON:JSON.parse(String.fromCharCode.apply(null,new Uint8Array(t.response.clientDataJSON)))}};n(!0,JSON.stringify(i))}).catch(function(e){"name"in e&&("AbortError"==e.name||"NS_ERROR_ABORT"==e.name)||"NotAllowedError"==e.name?n(!1,"abort"):n(!1,e.toString())})}(r,function(e,r){a.default.ajax({url:wp.ajax.settings.url,method:"post",data:{action:t,payload:r,_wpnonce:o},success:n})})},login:function(e,n){e.action;var t,a,r,o,i=e.payload;e._wpnonce,t=i,a=function(e,t){n({success:e,result:t})},r=JSON.parse(t),o=r.challenge,r.challenge=new Uint8Array(r.challenge),r.allowCredentials.forEach(function(e,n){r.allowCredentials[n].id=new Uint8Array(e.id)}),navigator.credentials.get({publicKey:r}).then(function(e){var n=[];new Uint8Array(e.rawId).forEach(function(e){n.push(e)});var t=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(e.response.clientDataJSON))),r=[];new Uint8Array(e.response.clientDataJSON).forEach(function(e){r.push(e)});var i=[];new Uint8Array(e.response.authenticatorData).forEach(function(e){i.push(e)});var u=[];new Uint8Array(e.response.signature).forEach(function(e){u.push(e)});var l={type:e.type,originalChallenge:o,rawId:n,response:{authenticatorData:i,clientData:t,clientDataJSONarray:r,signature:u}};a(!0,JSON.stringify(l))}).catch(function(e){"name"in e&&("AbortError"==e.name||"NS_ERROR_ABORT"==e.name||"NotAllowedError"==e.name)?a(!1,"abort"):a(!1,e.toString())})},sendRequest:function(e,n){var t=e.action,r=e.payload,o=e._wpnonce;a.default.ajax({url:wp.ajax.settings.url,method:"post",data:{action:t,payload:r,_wpnonce:o},success:n})}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{}),function(n){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==n?n.jQuery:null)&&t.__esModule?t:{default:t};(0,a.default)(document).on("click","#webauthn-register-key",function(n){n.preventDefault();var t=JSON.parse((0,a.default)(n.target).attr("data-create-options"));(0,e.register)(t,function(e){(0,a.default)("#webauthn-keys").append(e.html)})}),(0,a.default)(document).on("click",".webauthn-action",function(n){var t=JSON.parse((0,a.default)(n.target).attr("data-action")),r=n.target;(0,a.default)(n.target).closest(".webauthn-key"),"webauthn-test-key"===t.action?(n.preventDefault(),(0,e.login)(t,function(e){console.log(e),(0,a.default)(r).append('<span class="dashicons dashicons-yes-alt"></span>')})):"webauthn-delete-key"===t.action&&(n.preventDefault(),(0,e.sendRequest)(t,function(e){e.success&&(0,a.default)(r).closest(".webauthn-key").remove()})),"webauthn-edit-key"===t.action&&"true"!==(0,a.default)(n.currentTarget).prop("contenteditable")&&(n.preventDefault(),function(n,t){var r=t.action,o=t.payload,i=t._wpnonce,u=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],u=(0,a.default)(n).text();(0,a.default)(n).prop("contenteditable",!1),(0,a.default)(document).off("keydown"),(0,a.default)(n).off("blur"),t&&l!==u?((0,a.default)('<span class="spinner"></span>').insertAfter(n),(0,e.sendRequest)({action:r,payload:{md5id:o,label:u},_wpnonce:i},function(e){(0,a.default)(n).next(".spinner").remove()})):t||(0,a.default)(n).text(l)},l=(0,a.default)(n).text();(0,a.default)(n).prop("contenteditable",!0),(0,a.default)(document).on("keydown",function(e){13===e.which?(u(!0),e.preventDefault()):27===e.which&&u(!0)}),(0,a.default)(n).on("blur",function(e){return u(!0)}),document.execCommand("selectAll",!1,null)}(n.currentTarget,t))})}.call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,