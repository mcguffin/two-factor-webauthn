!function(){var e,t={};(function(e){"use strict";var n,a=(n="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&n.__esModule?n:{default:n};function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var o=function(e){return function(e){if(Array.isArray(e))return r(e)}(t=new Uint8Array(e))||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(t)||function(e,t){if(e){if("string"==typeof e)return r(e,void 0);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,void 0):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}();var t};t={register:function(e,t){var n=e.createOpts;n.attestation="none",n.challenge=new Uint8Array(n.challenge),n.user.id=new Uint8Array(n.user.id),delete n.user.icon,n.authenticatorSelection.authenticatorAttachment=void 0,n.authenticatorSelection.requireResidentKey=void 0,console.log("credentials.create"),console.log(n);var r=navigator.credentials.create({publicKey:n}).then(function(n){console.log("credentials.create result"),console.log(n);var r={id:n.id,rawId:o(n.rawId),response:{attestationObject:o(n.response.attestationObject),clientDataJSON:String.fromCharCode.apply(null,new Uint8Array(n.response.clientDataJSON))},type:n.type};a.default.ajax({url:wp.ajax.settings.url,method:"post",data:{action:"webauthn-register",credential:JSON.stringify(r),_ajax_nonce:e.ajaxNonce},success:t})}).catch(function(e){console.error(e)});console.log(r)},login:function(e,t){e.action;var n=e.authOpts;e._wpnonce,n.challenge=new Uint8Array(n.challenge),n.allowCredentails=n.allowCredentails.map(function(e){return e.id=new Uint8Array(e.id),e.transports=["usb","nfc","ble","internal"],e}),console.log("credentials.get"),console.log(n);var a=navigator.credentials.get({publicKey:n}).then(function(e){console.log("credentials.get result"),console.log(e)});console.log(a)},deleteKey:function(e,t){a.default.ajax({url:wp.ajax.settings.url,method:"post",data:e,success:t})}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{}),(e=jQuery)(document).on("click","#webauthn-register-key",function(n){n.preventDefault();var a=JSON.parse(e(n.target).attr("data-create-options"));(0,t.register)(a,function(t){e("#webauthn-keys").append(t.html)})}),e(document).on("click",".webauthn-action-button",function(n){n.preventDefault();var a=JSON.parse(e(n.target).attr("data-action")),r=n.target;"webauthn-test-key"===a.action?(0,t.login)(a,function(t){e(r).append('<span class="dashicons dashicons-yes-alt"></span>')}):"webauthn-delete-key"===a.action&&(0,t.deleteKey)(a,function(t){t.success&&e(r).closest(".webauthn-key").remove()})})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,