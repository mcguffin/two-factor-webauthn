!function(){var e,n={};(function(e){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};n={register:function(e,n){e.action;var t=e.payload;e._wpnonce,function(e,n){(e=JSON.parse(e)).publicKey.attestation=void 0,e.publicKey.challenge=new Uint8Array(e.publicKey.challenge),e.publicKey.user.id=new Uint8Array(e.publicKey.user.id),navigator.credentials.create({publicKey:e.publicKey}).then(function(t){var a=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(t.response.clientDataJSON)));if(e.b64challenge!=a.challenge&&n(!1,"key returned something unexpected (1)"),"https://"+e.publicKey.rp.name!=a.origin)return n(!1,"key returned something unexpected (2)");if(!("type"in a))return n(!1,"key returned something unexpected (3)");if("webauthn.create"!=a.type)return n(!1,"key returned something unexpected (4)");var r=[];new Uint8Array(t.response.attestationObject).forEach(function(e){r.push(e)});var i=[];new Uint8Array(t.rawId).forEach(function(e){i.push(e)});var o={rawId:i,id:t.id,type:t.type,response:{attestationObject:r,clientDataJSON:JSON.parse(String.fromCharCode.apply(null,new Uint8Array(t.response.clientDataJSON)))}};n(!0,JSON.stringify(o))}).catch(function(e){"name"in e&&("AbortError"==e.name||"NS_ERROR_ABORT"==e.name)||"NotAllowedError"==e.name?n(!1,"abort"):n(!1,e.toString())})}(t,function(t,r){a.default.ajax({url:wp.ajax.settings.url,method:"post",data:{action:"webauthn-register",payload:r,_wpnonce:e._wpnonce},success:n})})},login:function(e,n){e.action;var t,a,r,i,o=e.payload;e._wpnonce,t=o,a=function(e,t){n({success:e,result:t})},r=JSON.parse(t),i=r.challenge,r.challenge=new Uint8Array(r.challenge),r.allowCredentials.forEach(function(e,n){r.allowCredentials[n].id=new Uint8Array(e.id)}),navigator.credentials.get({publicKey:r}).then(function(e){var n=[];new Uint8Array(e.rawId).forEach(function(e){n.push(e)});var t=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(e.response.clientDataJSON))),r=[];new Uint8Array(e.response.clientDataJSON).forEach(function(e){r.push(e)});var o=[];new Uint8Array(e.response.authenticatorData).forEach(function(e){o.push(e)});var c=[];new Uint8Array(e.response.signature).forEach(function(e){c.push(e)});var u={type:e.type,originalChallenge:i,rawId:n,response:{authenticatorData:o,clientData:t,clientDataJSONarray:r,signature:c}};a(!0,JSON.stringify(u))}).catch(function(e){"name"in e&&("AbortError"==e.name||"NS_ERROR_ABORT"==e.name||"NotAllowedError"==e.name)?a(!1,"abort"):a(!1,e.toString())})},deleteKey:function(e,n){var t=e.action,r=(e.payload,e._wpnonce);a.default.ajax({url:wp.ajax.settings.url,method:"post",data:{action:t,payload:info,_wpnonce:r},success:n})}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{}),(e=jQuery)(document).on("click","#webauthn-register-key",function(t){t.preventDefault();var a=JSON.parse(e(t.target).attr("data-create-options"));(0,n.register)(a,function(n){e("#webauthn-keys").append(n.html)})}),e(document).on("click",".webauthn-action-button",function(t){t.preventDefault();var a=JSON.parse(e(t.target).attr("data-action")),r=t.target;"webauthn-test-key"===a.action?(0,n.login)(a,function(n){console.log(n),e(r).append('<span class="dashicons dashicons-yes-alt"></span>')}):"webauthn-delete-key"===a.action&&(0,n.deleteKey)(a,function(n){n.success&&e(r).closest(".webauthn-key").remove()})})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,